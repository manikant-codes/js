# Assigned
1. Currency Converter
2. Simple Calculator
3. Greatest of 3 Numbers
4. Positive Negative or Zero
5. Odd Even
6. Guess The Number Game


# Pending
1. Rock Paper Scisor Game
2. Guess The Alphabet Game
(Ek array banana hai, us me A - Z store karna hai. 0 - 25 position tak elements honge. Ab 0 - 25 tak ek random number generate karna hai. alphabets[randomNumber] ye aapka randomAlphabet hooga. User se input le ke check karna hai ke user ne jo alphabet guess kiya hai wo sahi hai ya nahi.)
(Common mistake: User small alphabet input loo aur usko array ke capital alphabet se compare karao.)

# String
Link: https://www.w3resource.com/javascript-exercises/javascript-string-exercises.php

1. Write a JavaScript function to check whether an 'input' is a string or not.
2. Write a JavaScript function to check whether a string is blank or not.
3. Write a JavaScript function to split a string and convert it into an array of words.
4. Write a JavaScript function to extract a specified number of characters from a string.
5. Write a JavaScript function to convert a string into abbreviated form.
    input: "Robin Singh"
    output: "Robin S."
6. Write a JavaScript function that hides email addresses to prevent unauthorized access.
    input: "robin_singh@example.com"
    output: "robin...@example.com"
7. Write a JavaScript function to capitalize the first letter of a string.
    input: "js string exercises"
    output: "Js string exercises"
8. Write a JavaScript function to capitalize the first letter of each word in a string.
    input: "js string exercises"
    output: "Js String Exercises"
9. Write a JavaScript function to truncate a string if it is longer than the specified number of characters. Truncated strings will end with a translatable ellipsis sequence ("...") (by default) or specified characters.
    input: textTruncate('We are doing JS string exercises.', 19);
    output: "We are doing JS ..."
    input: textTruncate('We are doing JS string exercises.', 15, '!!');
    output: "We are doing !!"
10. padStart, padEnd
    - lopeoverseas@gmail.com
    - manikantjha@yahoo.com
    - lopeoverseas@website.in

    - lop*********@gmail.com
    - man********@yahoo.com
    - lop*********@website.in

    - +91-9865985452
    - +91-*******452

# Array Iteration Methods

[
  {
    "name": "The Shawshank Redemption",
    "rating": 9.3,
    "genre": ["Drama", "Crime"]
  },
  {
    "name": "Spirited Away",
    "rating": 8.8,
    "genre": ["Animation", "Fantasy", "Adventure"]
  },
  {
    "name": "The Dark Knight",
    "rating": 9.0,
    "genre": ["Action", "Crime", "Thriller"]
  },
  {
    "name": "Parasite",
    "rating": 8.6,
    "genre": ["Thriller", "Comedy", "Drama"]
  },
  {
    "name": "Inception",
    "rating": 8.8,
    "genre": ["Action", "Sci-Fi", "Thriller"]
  }
]

- Make a search functionality.
- There should be a single search bar.
- From it user should be able to search based on name, rating and genre.

const phone = [60000, 10000, 25000, 150000, 1000];
const watch = [2500, 4500, 50000, 16000];
const budget = 60000;

- Budget me ek phone aur 1 watch leni hai, is tarah se ke wo budget pura hojaye. 
- Budget me ek phone aur 1 watch leni hai, is tarah se ke wo us budget me sabse mehngi watch aur phone hoo. Zada se zada budget use karna hai.